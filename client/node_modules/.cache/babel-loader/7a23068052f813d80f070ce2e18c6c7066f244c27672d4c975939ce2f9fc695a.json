{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nacho\\\\Documents\\\\WorkoutTracker\\\\client\\\\src\\\\components\\\\createExercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateExercise() {\n  _s();\n  const [form, setForm] = useState({\n    name: '',\n    splashImageLink: '',\n    demoImageLink: '',\n    youtubeVideoLink: '',\n    personalNote: '',\n    targetMuscle: '',\n    creationDate: '',\n    creatorId: '',\n    lastUpdated: '',\n    lastUpdatedBy: ''\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n    const currentDate = new Date();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newWorkout = {\n      ...form,\n      creationDate: currentDate,\n      lastUpdated: currentDate\n    };\n    await fetch(\"http://localhost:5050/record\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newWorkout)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      name: '',\n      splashImageLink: '',\n      demoImageLink: '',\n      youtubeVideoLink: '',\n      personalNote: '',\n      targetMuscle: '',\n      creatorId: '',\n      lastUpdatedBy: ''\n    });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: form.name,\n          onChange: e => updateForm({\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"personalNote\",\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"personalNote\",\n          value: form.personalNote,\n          onChange: e => updateForm({\n            personalNote: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"targetMuscle\",\n          children: \"Muscle Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"muscleGroup\",\n          value: form.muscleGroup,\n          onChange: e => updateForm({\n            muscleGroup: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create Exercise\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 4\n  }, this);\n}\n_s(CreateExercise, \"ZQu7yhL74ztpTL9usL1ZbbsXGPw=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateExercise;\nvar _c;\n$RefreshReg$(_c, \"CreateExercise\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","CreateExercise","_s","form","setForm","name","splashImageLink","demoImageLink","youtubeVideoLink","personalNote","targetMuscle","creationDate","creatorId","lastUpdated","lastUpdatedBy","navigate","updateForm","value","prev","onSubmit","e","preventDefault","currentDate","Date","newWorkout","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","id","onChange","target","muscleGroup","_c","$RefreshReg$"],"sources":["C:/Users/nacho/Documents/WorkoutTracker/client/src/components/createExercise.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n\nexport default function CreateExercise() {\n const [form, setForm] = useState({\n  name: '',\n  splashImageLink: '',\n  demoImageLink: '',\n  youtubeVideoLink: '',\n  personalNote: '',\n  targetMuscle: '',\n  creationDate: '',\n  creatorId: '',\n  lastUpdated: '',\n  lastUpdatedBy: '',\n });\n const navigate = useNavigate();\n\n // These methods will update the state properties.\n function updateForm(value) {\n   return setForm((prev) => {\n     return { ...prev, ...value };\n   });\n }\n\n // This function will handle the submission.\n async function onSubmit(e) {\n   e.preventDefault();\n\n   const currentDate = new Date();\n\n   // When a post request is sent to the create url, we'll add a new record to the database.\n   const newWorkout = { \n      ...form,\n      creationDate: currentDate,\n      lastUpdated: currentDate,\n    };\n\n   await fetch(\"http://localhost:5050/record\", {\n     method: \"POST\",\n     headers: {\n       \"Content-Type\": \"application/json\",\n     },\n     body: JSON.stringify(newWorkout),\n   })\n   .catch(error => {\n     window.alert(error);\n     return;\n   });\n\n   setForm({ \n    name: '',\n    splashImageLink: '',\n    demoImageLink: '',\n    youtubeVideoLink: '',\n    personalNote: '',\n    targetMuscle: '',\n    creatorId: '',\n    lastUpdatedBy: ''\n  });\n   navigate(\"/\");\n }\n\n // This following section will display the form that takes the input from the user.\n return (\n   <div>\n     <h3>Create New Workout</h3>\n     <form onSubmit={onSubmit}>\n       <div className=\"form-group\">\n         <label htmlFor=\"name\">Name</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"name\"\n           value={form.name}\n           onChange={(e) => updateForm({ name: e.target.value })}\n         />\n       </div>\n       <div className=\"form-group\">\n         <label htmlFor=\"personalNote\">Notes</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"personalNote\"\n           value={form.personalNote}\n           onChange={(e) => updateForm({ personalNote: e.target.value })}\n         />\n       </div>\n       <div className=\"form-group\">\n         <label htmlFor=\"targetMuscle\">Muscle Group</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"muscleGroup\"\n           value={form.muscleGroup}\n           onChange={(e) => updateForm({ muscleGroup: e.target.value })}\n         />\n       </div>\n       <div className=\"form-group\">\n         <input\n           type=\"submit\"\n           value=\"Create Exercise\"\n           className=\"btn btn-primary\"\n         />\n       </div>\n     </form>\n   </div>\n );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}